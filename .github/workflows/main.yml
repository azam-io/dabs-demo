name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  # Common Job for installing dependencies, validating, and running tests
  install_and_test:
    runs-on: ubuntu-latest
    container:
      image: python:3.10 # Use the python:3.10 image as you requested
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step to set up the Databricks CLI
      - name: Set up Databricks CLI
        uses: databricks/setup-cli@main

      # Step to validate the asset bundle
      - name: Validate Bundle
        run: databricks bundle validate || { echo "Bundle validation failed"; exit 1; }
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

  # Deploy to Development for the `develop` branch
  deploy_to_development:
    runs-on: ubuntu-latest
    needs: install_and_test
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step to set up the Databricks CLI
      - name: Set up Databricks CLI
        uses: databricks/setup-cli@main

      - name: Deploy to Development
        run: databricks bundle deploy --target dev --auto-approve
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

  # Deploy to Production for the `main` branch (manual trigger)
  # deploy_to_production:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   environment:
  #     name: production
  #     url: https://example.com/production
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Set path for Databricks CLI
  #       run: echo "export PATH=$PATH:$GITHUB_WORKSPACE" >> $GITHUB_ENV

  #     - name: Deploy to Production (Manual Trigger)
  #       run: |
  #         source $GITHUB_WORKSPACE/set_path.sh
  #         databricks bundle deploy --target prod
