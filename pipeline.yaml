name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  # Common Job for installing dependencies, validating, and running tests
  install_and_test:
    runs-on: ubuntu-latest
    container:
      image: python:3.10 # Use the python:3.10 image as you requested
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Databricks CLI
        uses: actions/cache@v3
        with:
          path: ~/.cache/databricks
          key: ${{ runner.os }}-databricks-cli-${{ hashFiles('**/requirements-cicd.txt') }}
          restore-keys: |
            ${{ runner.os }}-databricks-cli-

      - name: Cache Sonar
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/requirements-cicd.txt') }}
          restore-keys: |
            ${{ runner.os }}-sonar-

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y jq
          bash ./install.sh
          bash ./generate_creds.sh

      - name: Set path for Databricks CLI
        run: echo "export PATH=$PATH:$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Validate Bundle
        run: |
          source $GITHUB_WORKSPACE/set_path.sh
          databricks --version
          databricks bundle validate || { echo "Bundle validation failed"; exit 1; }

      - name: Install test dependencies
        run: pip install -r requirements-cicd.txt

      - name: Run Tests
        run: pytest tests/

  # Deploy to Development for the `develop` branch
  deploy_to_development:
    runs-on: ubuntu-latest
    needs: install_and_test
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set path for Databricks CLI
        run: echo "export PATH=$PATH:$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Deploy to Development
        run: |
          source $GITHUB_WORKSPACE/set_path.sh
          databricks bundle deploy --target dev --auto-approve

  # Deploy to Production for the `main` branch (manual trigger)
  deploy_to_production:
    runs-on: ubuntu-latest
    needs: deploy_to_qa
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://example.com/production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set path for Databricks CLI
        run: echo "export PATH=$PATH:$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Deploy to Production (Manual Trigger)
        run: |
          source $GITHUB_WORKSPACE/set_path.sh
          databricks bundle deploy --target prod
